{"version":3,"sources":["components/Search.js","components/Greeting.js","api/index.js","components/Login.js","components/Register.js","components/Button.js","components/Posts.js","components/Loading.js","components/Create.js","components/Nav.js","components/Welcome.js","components/User.js","components/Mymessages.js","components/Myposts.js","components/Newuser.js","components/Message_form.js","components/Post_edit.js","components/Delete_post.js","index.js"],"names":["Search","posts","setFilterPost","useState","search","setSearch","className","type","placeholder","size","onChange","e","target","value","onClick","preventDefault","copy","query","split","post","Loop1","key","q","RegExp","test","push","Greeting","userName","filterPost","BASE","getUserName","token","a","data","headers","fetch","res","json","results","success","user","username","handleLogin","pwd","method","body","JSON","stringify","password","handleRegister","getPosts","createPost","object","response","getUser","postMessage","id","msg","message","content","editPost","deletePost","Login","setUserName","setToken","setLoggedIn","setUser","setPwd","history","useHistory","errorMsg","setErrorMsg","loginFunction","event","error","localStorage","setItem","document","getElementById","reset","onSubmit","name","required","autoComplete","style","color","Register","pwdConfirm","setPwdConfirm","bgColor","setbgColor","checkPwd","setCheckPwd","useEffect","backgroundColor","length","registerFunction","maxLength","disabled","withRouter","text","clickHandler","Posts","setMessage","loggedIn","setSinglePost","map","title","_id","description","price","willDeliver","createdAt","updatedAt","location","messages","post_id","author","fromUser","moment","format","Loading","option","Create","setPosts","setTitle","setDescription","setPrice","postLocation","setLocation","setWillDeliver","handleCreate","postObject","postCopy","newPosts","rows","cols","Nav","to","textDecoration","activeStyle","fontWeight","fontSize","textShadow","removeItem","Welcome","User","myMessages","myPosts","Mymessages","sent","setSent","recieved","setRecieved","sentMsg","recMsg","sort","Myposts","activePosts","setActivePosts","inactivePosts","setInactivePosts","active","inActive","Newuser","Message_form","singlePost","setMyPosts","setMyMessages","setMsg","handleMsg","goBack","Post_edit","handleEdit","authString","Delete_post","handleDelete","App","getItem","postData","postDatum","path","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.097093a0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\n\r\nconst Search = ( { posts, setFilterPost }) => {\r\n\r\n    const [ search, setSearch] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        let copy = []\r\n        let query = search.split(\" \") // creates array of search words from input\r\n        \r\n        for ( const post of posts) { // loop over posts\r\n            const keys = ['location', 'title', 'price', 'description'] // searchable areas of post\r\n            Loop1 : // label reference for break; starting point after matches are found.\r\n            for ( let key of keys) { // loop over object keys\r\n            \r\n                for ( let q of query ) { // loop of array of search word(s)\r\n                    if (!q) {break} // jumps out of loop for undefined fields \r\n\r\n                    let patt = new RegExp(q, 'i',)  // creates regex expression from q that is not case-sensitive\r\n\r\n                    if (patt.test(post[key])) { // checks for matches returns (true or false)\r\n                        // copy array\r\n                        copy.push(post)         // add post to copy array\r\n                        break Loop1;  // breaks the loop to eliminate duplicate posts being added\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        setFilterPost(copy);\r\n\r\n    }\r\n\r\n    return (\r\n    <form className='search-form' >\r\n        <label>Search\r\n            <input type='search' placeholder='whatever, whenever' size={50} onChange={e=> setSearch(e.target.value)}/>\r\n            <input type='submit' onClick={handleSubmit}/>\r\n            <input type='reset' onClick={()=> setFilterPost([])}/>\r\n        </label>\r\n    </form>\r\n    )\r\n\r\n}\r\n\r\nexport default Search","import React from 'react';\r\nimport Search from './Search'\r\n\r\nconst Greeting = ( { userName, posts, setFilterPost, filterPost } ) => {\r\n  \r\n    return (\r\n    <div className='app-header'>\r\n      <div className=\"app-title\">\r\n        <h1 >Stranger's Things</h1>\r\n      </div>\r\n      <div className='header-foot'>\r\n        <div className='title-actions'>\r\n          <Search posts={posts} filterPost={filterPost} setFilterPost={setFilterPost} />\r\n        </div>\r\n        <div className='welcome-span'>\r\n          <span>Welcome {userName}</span>\r\n        </div>\r\n      </div> \r\n    </div>   \r\n    )\r\n\r\n}\r\n\r\nexport default Greeting","\r\nconst BASE = 'https://strangers-things.herokuapp.com/api/2007-UNF-RM-WEB-PT'\r\n\r\n\r\nexport async function getUserName( token ) {\r\n\r\n  const data = { headers: {\r\n    'Authorization' : `Bearer ${token}`,\r\n    'Content-Type' : 'application/json'\r\n  }\r\n}\r\n\r\n  try {\r\n    const res = await fetch(`${BASE}/test/me`, data )\r\n    const results = await res.json()\r\n    return results.success ? results.data.user.username : 'Guest'\r\n  } catch (error) {\r\n    throw (error)\r\n\r\n  }\r\n\r\n}\r\n\r\nexport async function handleLogin( user, pwd ) {\r\n    \r\n    const data = {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          user: {\r\n            username: user,\r\n            password: pwd\r\n          }\r\n        })\r\n      }\r\n    \r\n    try {\r\n        const res = await fetch(`${BASE}/users/login`, data);\r\n\r\n        const results = await res.json()\r\n        return results\r\n    } catch (error) {\r\n        throw (error)\r\n    }  \r\n\r\n}\r\n\r\nexport async function handleRegister( user, pwd ) {\r\n\r\n    const data = {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          user: {\r\n            username: user,\r\n            password: pwd\r\n          }\r\n        })\r\n      }\r\n\r\n    try {\r\n        const res = await fetch(`${BASE}/users/register`, data)\r\n        const results = await res.json()\r\n        return results\r\n    } catch (error) {\r\n        throw (error)\r\n      }\r\n}\r\n\r\nexport async function getPosts(token) {\r\n\r\n    const body = {headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n      }\r\n    }\r\n   \r\n  try {\r\n    const res = await fetch(`${BASE}/posts`, body)\r\n    const data = await res.json();\r\n    return data.data.posts\r\n  } catch (error) {\r\n    throw (error)\r\n    }\r\n}\r\n\r\nexport async function createPost(object) {\r\n\r\n  try {\r\n    const response = await fetch(`${BASE}/posts`, object)\r\n    const data = await response.json()\r\n    return data\r\n  } catch (error) {\r\n    throw (error)\r\n  }\r\n\r\n}\r\n\r\nexport async function getUser(token) {\r\n\r\n  const data = { headers: {\r\n    'Authorization' : `Bearer ${token}`,\r\n    'Content-Type' : 'application/json'\r\n    }\r\n  }\r\n\r\n  try {\r\n    const res = await fetch(`${BASE}/users/me`, data )\r\n    const results = await res.json()\r\n    return results\r\n  } catch (error) {\r\n    throw (error)\r\n\r\n  }\r\n}\r\n\r\nexport async function postMessage(id, msg, token) {\r\n\r\n  const data = {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n      },\r\n    body: JSON.stringify({\r\n      message: {\r\n        content: msg\r\n        }\r\n      })\r\n  }\r\n\r\n  try {\r\n    const res = await fetch(`${BASE}/posts/${id}/messages`, data)\r\n    const results = await res.json();\r\n    return results\r\n  } catch (error) {\r\n    throw (error)\r\n  }\r\n\r\n}\r\n\r\nexport async function editPost(id, data) {\r\n\r\n  try {\r\n    const res = await fetch(`${BASE}/posts/${id}`, data)\r\n    const results = await res.json();\r\n    return results;\r\n  } catch (error) {\r\n    throw (error)\r\n  }\r\n\r\n}\r\n\r\nexport async function deletePost(id, token) {\r\n\r\n  try {\r\n    const res = await fetch(`${BASE}/posts/${id}`, {method: \"DELETE\",\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  })\r\n    const results = await res.json();\r\n    return results;\r\n  } catch (error) {\r\n    throw (error)\r\n  }\r\n\r\n}","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { handleLogin } from '../api'\r\n\r\nconst Login = ( { setUserName, setToken, setLoggedIn, user, setUser, pwd, setPwd } ) => {\r\n\r\n    const history = useHistory();\r\n    const [ errorMsg, setErrorMsg ] = useState('')\r\n\r\n    const handleCancel =  (event) => {\r\n        event.preventDefault();\r\n        document.getElementById('loginForm').reset();\r\n        history.push('/');\r\n        \r\n    }\r\n\r\n    const loginFunction = async (event) => {\r\n        event.preventDefault();\r\n        let response =  await handleLogin(user,pwd);\r\n        response.error ? setErrorMsg(response.error.message + \"!\") : setErrorMsg('');\r\n        if (response.success) {\r\n            setToken(response.data.token);\r\n            localStorage.setItem('token', response.data.token );\r\n            setUserName(user); setUser(''); setPwd(''); setErrorMsg(''); setLoggedIn(true);\r\n            document.getElementById('loginForm').reset();\r\n            history.push('/')   \r\n        } \r\n    }\r\n\r\n    return (\r\n          \r\n    <aside className='right-aside'>\r\n        <div className='right-header'><h2>Login</h2></div>\r\n        <br/>\r\n            <div className='right-body'>\r\n                <form id='loginForm' onSubmit={loginFunction} method=\"Post\">\r\n                    <label>\r\n                        Username: <br/>\r\n                        <input type=\"text\" className=\"username\" name=\"username\" onChange={(e)=>{\r\n                            setUser(e.target.value);    \r\n                        }} required={true} autoComplete={'off'}/>\r\n                        </label>\r\n                        <br/>\r\n                    <label> Password:<br/>\r\n                        <input type=\"password\" className=\"pwd\" name=\"pwd\" onChange={(e)=>{\r\n                            setPwd(e.target.value);\r\n                        }} required={true} />\r\n                        </label>\r\n                        <br/>\r\n                    <input type=\"submit\" value=\"Login\" id=\"formSubmit\" />\r\n                    <button id=\"formCancel\" onClick={handleCancel}>Cancel</button>\r\n                </form>\r\n            </div>\r\n            <br />\r\n        <div className=\"loginMsg\" style={{color : 'red'}}>{errorMsg}</div>\r\n    </aside> \r\n    )\r\n    \r\n\r\n}\r\n\r\nexport default Login","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { handleRegister } from '../api';\r\n\r\nconst Register = ({ setLoggedIn, setToken, user, setUser, pwd, setPwd, setUserName }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [ pwdConfirm, setPwdConfirm ] = useState('')\r\n    const [ bgColor, setbgColor ] = useState({})\r\n    const [ checkPwd, setCheckPwd ] = useState(true)\r\n    const [ errorMsg, setErrorMsg ] = useState('')\r\n    \r\n    useEffect(() => {\r\n        setbgColor(pwd === pwdConfirm ? {backgroundColor : 'rgba(2,170,2,.3)'} : {backgroundColor : 'rgba(255, 0, 0, .3)'})\r\n        setCheckPwd( ( pwd == pwdConfirm && pwd.length > 7 && user.length > 5 ) ? false : true )\r\n    }, [pwd, pwdConfirm, user])\r\n\r\n    const handleCancel = (event) => {\r\n        event.preventDefault();\r\n        document.getElementById('registerForm').reset();\r\n        history.push('/home');\r\n\r\n    }\r\n\r\n    const registerFunction = async (event) => {\r\n\r\n        event.preventDefault();\r\n        let response =  await handleRegister(user,pwd);\r\n\r\n        response.error ? setErrorMsg(response.error.message ) : setErrorMsg('');\r\n        if (response.success) {\r\n            setToken(response.data.token);\r\n            localStorage.setItem('token', response.data.token );\r\n            setUserName(user), setUser(''), setPwd(''), setErrorMsg(''), setLoggedIn(true);\r\n            document.getElementById('registerForm').reset();\r\n            history.push('/new_user')\r\n        } \r\n\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n    <aside className='right-aside'>\r\n        <div className='right-heading'><h2>Register New User</h2></div>\r\n            <div className='right-body'>\r\n                <form id='registerForm' onSubmit={registerFunction} method=\"Post\">\r\n                    <label>\r\n                        Username: <br/>\r\n                        <input type=\"text\" className=\"username\" name=\"username\" placeholder=\"6 - 20 characters\" maxLength={20} onChange={(e)=>{\r\n                            setUser(e.target.value);    \r\n                        }}required={true} autoComplete={'off'}/>\r\n                        </label>\r\n                        <br/>\r\n                    <label> Password:<br/>\r\n                        <input type=\"password\" className=\"pwd\" placeholder='min 8, max 20 characters' name=\"pwd\" maxLength={20} onChange={(e)=>{\r\n                            setPwd(e.target.value);\r\n                        }}required={true} />\r\n                        </label>\r\n                        <br/>\r\n                        <label> Confirm Password:<br/>\r\n                        <input type=\"password\" className=\"pwd\" name=\"pwd\" style={bgColor} onChange={(e)=>{\r\n                            setPwdConfirm(e.target.value);\r\n                        }}required={true} />\r\n                        </label>\r\n                        <br/>\r\n                    <input type=\"submit\" value=\"Register\" className=\"formSubmit\" disabled={checkPwd} />\r\n                    <button className=\"formCancel\" onClick={handleCancel}>Cancel</button>\r\n                </form>\r\n            </div>\r\n        <div className='registerMsg'>{errorMsg}</div>\r\n    </aside>\r\n    )\r\n\r\n}\r\n\r\nexport default Register","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst Button = ({ text, clickHandler }) => {\r\n\r\n    return <button onClick={clickHandler}>{text}</button>\r\n\r\n}\r\n\r\nexport default withRouter(Button)\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nimport Button from './Button'\r\n\r\nconst Posts = ( { posts, userName, setMessage, loggedIn, setSinglePost } ) => {\r\n\r\nconst history = useHistory()\r\n\r\nreturn (\r\n\r\n<div className=\"post-board\">\r\n    {posts.map((post)=> {\r\n\r\n        let { title, _id, description, price, willDeliver, createdAt, updatedAt, location, messages } = post\r\n\r\n        return (\r\n            <div key={_id} post_id={_id} className='post'>\r\n                <div className='post-header'>\r\n                    <h1 className='post-title'>{title}</h1>\r\n                    <div className='author'>{post.author.username}</div>\r\n                </div>\r\n                <div className='post-body'>\r\n                    <div className='post-info'>Description: {description}</div>\r\n                    <div className='post-info'>Price: {price}</div>\r\n                    <div className='post-info'>Location: {location}</div>\r\n                    <div className='post-info'>Will Deliver? {willDeliver ? \"Yes\" : \"No\" }</div>\r\n                </div>\r\n                { messages.length \r\n                ? \r\n                <div className='post-messages'>Messages: {messages.map(({_id, content, fromUser :{ username }})=>{\r\n                    return (\r\n                        <div key={_id} className='post-message'>\r\n                            <div>{username} says: {content}</div>\r\n                        </div>\r\n                        )\r\n                })} </div> \r\n                : ''}\r\n                <div className='post-actions'>\r\n                    <div className='post-dates'>\r\n                        <p>Created: {moment(createdAt).format('ddd, MMM Do YYYY, h:mm:ss a')}</p>\r\n                        <p>Updated: {moment(updatedAt).format('ddd, MMM Do YYYY, h:mm:ss a')}</p>\r\n                    </div>\r\n                    <div className='post-buttons'>\r\n                        <span>\r\n                        \r\n                        { userName === post.author.username\r\n                         ? \r\n                         <><Button text='Edit' clickHandler={() => {\r\n                            setSinglePost(post);\r\n                            history.push(`/editpost?${_id}`)\r\n                        }}/><Button text='Delete' clickHandler={() =>{\r\n                            setSinglePost(post);\r\n                            history.push(`/deletepost?${_id}`)\r\n                        }}/></> \r\n                         :\r\n                         <Button text='Post Message' clickHandler={ () => {\r\n                            if (loggedIn) {\r\n                                setSinglePost(post)\r\n                                history.push(`/message?${_id}`)\r\n                            }  else {setMessage('Please login or register to post messages!')}\r\n                         }}/>}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })}\r\n</div>\r\n\r\n)\r\n\r\n}\r\n\r\n// <div className='post-info'></div>\r\n\r\nexport default Posts","import React from 'react';\r\n\r\nconst Loading = ( { option } ) => {\r\n  return (\r\n    <div className={option}>\r\n        <div id='loading'>\r\n            <h2 className='gremlins'>Gremlins at work...</h2>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { createPost, getPosts } from '../api'\r\n\r\nconst Create = ({ token, setPosts, posts }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [ title, setTitle ] = useState('')\r\n    const [ description, setDescription ] = useState('')\r\n    const [ price , setPrice ] = useState('')\r\n    const [ postLocation, setLocation ] = useState('[On Request]')\r\n    const [ willDeliver , setWillDeliver ] = useState(false)\r\n\r\n    const handleCancel = (e) => {\r\n        e.preventDefault();\r\n        document.getElementById('createForm').reset();\r\n        history.push('/home');\r\n    }\r\n\r\n    const handleCreate = async (e) => {\r\n        e.preventDefault();\r\n        let authString = 'Bearer ' + token\r\n       \r\n        const postObject = {\r\n            method: \"Post\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': authString\r\n            },\r\n            body: JSON.stringify({\r\n                post: {\r\n                    title: title,\r\n                    description: description,\r\n                    price: price,\r\n                    willDeliver: willDeliver,\r\n                    location : postLocation\r\n                }\r\n            })\r\n        }\r\n        \r\n\r\n        let response = await createPost(postObject);\r\n        \r\n        // upon successful creation the new post is added to the existing posts updating state. A call is made to update posts from API and state is updated.\r\n        if (response.success) {\r\n            const postCopy = [...posts]\r\n            postCopy.push(response.data.post)\r\n            setPosts(postCopy);\r\n            const newPosts = await getPosts();\r\n            setPosts(newPosts);\r\n            history.push('/home')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <aside className='right-aside'>\r\n            <div className='right-header'>\r\n                <h2>Create Post</h2>\r\n                <h3>Tell us a little information.</h3>\r\n            </div>\r\n                <div className='right-body'>\r\n                    <form id='createForm' onSubmit={handleCreate}>\r\n                        <label>\r\n                            <div className='info-header'>Title:</div>\r\n                            <input type='text' onChange={ (e)=>{\r\n                                setTitle(e.target.value)\r\n                                }} required={true} maxLength={75} placeholder='required' size={50}/>\r\n                                <br/>\r\n                           <span className='remainder'>{'(' + (75 - title.length) +') characters remaining'}</span>\r\n                        </label>\r\n                        <br/>\r\n                        <label>\r\n                            <div className='info-header'>Description:</div>\r\n                            <textarea rows=\"5\" cols=\"50\" placeholder='required' required={true} maxLength={425} onChange={ (e) => setDescription(e.target.value)}/>\r\n                            <br/>\r\n                            <span className='remainder'>{'('+ (425-description.length) + ') characters remaining' }</span>\r\n                        </label>\r\n                        <br/>\r\n                        <label>\r\n                            <div className='info-header'>Price:</div>\r\n                            <input type='text' required={true} maxLength={20} placeholder='required' onChange={ (e)=> setPrice(e.target.value)}/>\r\n                        </label>\r\n                        <br/>\r\n                        <label>\r\n                        <div className='info-header'>Location:</div>\r\n                           <input type='text' placeholder='optional, [On Request] is default' size={50} onChange={ (e)=> setLocation(e.target.value)}/> \r\n                        </label>\r\n                        <br/>\r\n                        <label>\r\n                            <div className='info-header'>Will Deliver:</div>\r\n                            <select onChange={ (e)=> setWillDeliver(e.target.value) } >\r\n                                <option value={false}>False</option>\r\n                                <option value={true}>True</option>\r\n                            </select>\r\n                        </label>\r\n                        <div className='formActions'>\r\n                            <span>\r\n                                <input type='submit'/><button type='button' onClick={handleCancel}>Cancel</button><input type='reset' />\r\n                            </span>\r\n                        </div>\r\n                    </form>\r\n            </div>\r\n        </aside>\r\n    )\r\n\r\n}\r\n\r\nexport default Create","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom'\r\n\r\n\r\nconst Nav = ( { setUserName, setLoggedIn, setToken } ) => {\r\n\r\n    const logoutFunc = () => {\r\n        \r\n        setUserName('Guest');\r\n        setLoggedIn(false);\r\n        localStorage.removeItem('token');\r\n        setToken('')\r\n        \r\n    }\r\n\r\n    return (\r\n\r\n        <footer>\r\n            <NavLink to='/create'  style={{textDecoration: 'none'}} activeStyle={{fontWeight: 'bold', color: 'red', textDecoration: 'none', fontSize: '1.25em', textShadow: \"2px 2px blue\"}}>Create Post</NavLink>\r\n            <NavLink to='/myposts' style={{textDecoration: 'none'}} activeStyle={{fontWeight: 'bold', color: 'red', textDecoration: 'none', fontSize: '1.25em', textShadow: \"2px 2px blue\"}}> My Posts</NavLink>\r\n            <NavLink to='/mymessages' style={{textDecoration: 'none'}} activeStyle={{fontWeight: 'bold', color: 'red', textDecoration: 'none', fontSize: '1.25em', textShadow: \"2px 2px blue\"}}>My Messages</NavLink>\r\n            <Link to='/' style={{textDecoration: 'none'}} >Home</Link>\r\n            <Link style={{textDecoration: 'none'}} onClick={logoutFunc} to='/'>Logout</Link>\r\n        </footer>\r\n\r\n    )\r\n}\r\n\r\nexport default Nav","import React from 'react'\r\nimport { useHistory }  from 'react-router-dom';\r\n\r\nconst Welcome = ({message}) => {\r\n\r\nconst history = useHistory()\r\n\r\nreturn (<>\r\n    <section className='right-aside'>\r\n        <div className='right-header'>\r\n            <h2>Welcome to Stranger's Things!</h2>\r\n        </div>\r\n        <br/>\r\n        <div className='right-body'>\r\n            <p>If it's your first time here, please register.</p>\r\n            <br/>\r\n            <button className=\"register\" onClick={ () => history.push('/register')}>Register</button>\r\n            <br/>\r\n            <p>Returning users, please login.</p>\r\n            <br/>\r\n            <button className='logButton' onClick={()=> history.push('/login')}>Login</button>\r\n            <br/>\r\n            <div className='info-message'>\r\n                <p>{message}</p>\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n</>)\r\n\r\n}\r\n\r\nexport default Welcome","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst User = ( { userName, myMessages, myPosts } ) => {\r\n    \r\n    const logoutFunc = () => {\r\n        \r\n        setUserName('Guest');\r\n        setLoggedIn(false);\r\n        localStorage.removeItem('token');\r\n        setToken('')\r\n        \r\n    }\r\n\r\nreturn (\r\n    <div className='right-aside user'>\r\n        <div className='right-header'>\r\n                <h2 className='right-title'></h2>\r\n                <br/>\r\n                <h2>Hi {userName}</h2>\r\n        </div>\r\n        <br/>\r\n        <div className='right-body'>\r\n            <Link to='/mymessages' style={{textDecoration: 'none'}}>You have {myMessages} messages.</Link>\r\n            <br/>\r\n            <Link to='/myposts' style={{textDecoration: 'none'}}>You have {myPosts} post(s).</Link>\r\n            <br/>\r\n            <Link to='/create' style={{textDecoration: 'none'}} >Create Post</Link> \r\n            <br/>\r\n            <Link style={{textDecoration: 'none'}} onClick={logoutFunc} to='/'>Logout</Link>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default User","import React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Mymessages = ( { myMessages, userName } ) => {\r\n\r\n    const [ sent , setSent ] = useState([]);\r\n    const [ recieved , setRecieved ] = useState([]);\r\n\r\n    useEffect(()=>{\r\n      if (myMessages.length) {\r\n        let sentMsg = [];\r\n        let recMsg = [];\r\n        myMessages.map(( msg )=> (msg.fromUser.username === userName) ? sentMsg.push(msg) : recMsg.push(msg));\r\n        sentMsg.sort((msg)=> msg.post.title);\r\n        recMsg.sort((msg)=> msg.post.title);\r\n        setSent(sentMsg);\r\n        setRecieved(recMsg);\r\n      } \r\n    }, [])\r\n    \r\n\r\n\r\n// redirect handles page refresh that causes a loss of state and error.\r\nif (!myMessages.length || !myMessages) {return <Redirect to='/'/>}\r\n\r\nreturn (\r\n    <div className='right-aside'>\r\n        <div className='right-header'>\r\n            <div className='right-title'><h1>My Messages</h1></div>\r\n        </div>\r\n        <div className='right-body'>\r\n            <div className='myMessages'>\r\n                <h3>Recieved Messages</h3>    \r\n            { myMessages.length\r\n            ? \r\n             recieved.map(({_id , post : {title}, fromUser : {username}, content }) => {\r\n                return (\r\n                    \r\n                    <div className='message' key={_id}>\r\n                        <div className='message-title'>Post: {title}</div>                        \r\n                        <div className='message-body'>\r\n                            <p>Message: {content}</p>\r\n                            <p>From: {username}</p>                        \r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n            \r\n            :\r\n         <p>You have no messages at this time.</p> }\r\n            <h3>Sent Messages</h3>\r\n            { sent.map(({_id , post : {title}, fromUser : {username}, content }) => {\r\n                return (\r\n                    \r\n                    <div className='message' key={_id}>\r\n                        <div className='message-title'>Post: {title}</div>                        \r\n                        <div className='message-body'>\r\n                            <p>Message: {content}</p>\r\n                            <p>From: {username}</p>                        \r\n                        </div>\r\n                    </div>\r\n                )\r\n                }) \r\n            }\r\n            </div> \r\n        </div>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Mymessages","import React, { useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\nimport { useHistory, Redirect } from 'react-router-dom'\r\n\r\nimport Button from './Button'\r\n\r\n\r\n\r\nconst Myposts = ( { myPosts, setSinglePost } ) => {\r\n\r\nconst [ activePosts, setActivePosts ] = useState([]);\r\nconst [ inactivePosts, setInactivePosts ] = useState([])\r\n\r\n\r\n\r\nconst history = useHistory();\r\n\r\nuseEffect(()=>{\r\n    if (myPosts.length) {\r\n    const active = []\r\n    myPosts.map((post)=> {if (post.active) { active.push(post) } } );\r\n    setActivePosts(active);\r\n    const inActive = []\r\n    myPosts.map((post)=> {if (!post.active) { inActive.push(post) } } );\r\n    setInactivePosts(inActive);\r\n    }\r\n},[])\r\n\r\n    // redirect handles page refresh that causes a loss of state and error.\r\n    if (!myPosts.length || !myPosts) { return <Redirect to='/'/>}\r\n\r\n    return (\r\n        <div className='right-aside'>\r\n            <div className='right-header'>\r\n                <h2 className='right-title'>My Posts</h2>\r\n            </div>\r\n                <div className='right-body'>\r\n                    {myPosts.length \r\n                    ? <><div id='active-posts'><h3>Active Posts</h3> {activePosts.length ?\r\n                    (activePosts.map((post) => {\r\n                        let { title, _id, description, price, willDeliver, createdAt, updatedAt, location} = post\r\n                        return (\r\n                            <div key={_id} className='mypost'>\r\n                    <div className='post-header'>\r\n                        <h1 className='post-title'>{title}</h1>\r\n                        <div className='author'>{post.author.username}</div>\r\n                    </div>\r\n                    <div className='post-body'>\r\n                        <div className='post-info'>Description: {description}</div>\r\n                        <div className='post-info'>Price: {price}</div>\r\n                        <div className='post-info'>Location: {location}</div>\r\n                        <div className='post-info'>Will Deliver? {willDeliver ? \"Yes\" : \"No\" }</div>\r\n                    </div>\r\n                    <div className='post-actions'>\r\n                        <div className='post-dates'>\r\n                            <p>Created: {moment(createdAt).format('ddd, MMM Do YYYY, h:mm:ss a')}</p>\r\n                            <p>Updated: {moment(updatedAt).format('ddd, MMM Do YYYY, h:mm:ss a')}</p>\r\n                        </div>\r\n                        <div className='post-buttons'>\r\n                            <span>\r\n                            <Button text='Edit' clickHandler={() => {\r\n                            setSinglePost(post);\r\n                            history.push(`/editpost?${_id}`)\r\n                            }}/>\r\n                            <Button text='Delete'/>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n                \r\n                        )\r\n                    }))\r\n                 : <p>You have no active posts at this time. Click Create Post to make a post.</p> } </div>\r\n                <div id='inactive-posts'> <h3>Inactive Posts</h3>\r\n                {inactivePosts.map((post) => {\r\n                    let { title, _id, description, price, willDeliver, createdAt, updatedAt, location} = post\r\n                    return (\r\n                        <div key={_id} className='mypost'>\r\n                <div className='post-header'>\r\n                    <h1 className='post-title'>{title}</h1>\r\n                    <div className='author'>{post.author.username}</div>\r\n                </div>\r\n                <div className='post-body'>\r\n                    <div className='post-info'>Description: {description}</div>\r\n                    <div className='post-info'>Price: {price}</div>\r\n                    <div className='post-info'>Location: {location}</div>\r\n                    <div className='post-info'>Will Deliver? {willDeliver ? \"Yes\" : \"No\" }</div>\r\n                </div>\r\n                <div className='post-actions'>\r\n                    <div className='post-dates'>\r\n                        <p>Created: {moment(createdAt).format('ddd, MMM Do YYYY, h:mm:ss a')}</p>\r\n                        <p>Updated: {moment(updatedAt).format('ddd, MMM Do YYYY, h:mm:ss a')}</p>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n                    )\r\n                })}\r\n            </div></>\r\n                    :\r\n                    <p>You have no posts at this time. Click Create Post to make a post.</p>  }\r\n                </div>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Myposts","import React from 'react'\r\n\r\nconst Newuser = () => {\r\n\r\n    return (\r\n        <div className='right-aside'>\r\n            <div className='right-header'>\r\n                <h2 className='right-title'>Welcome to Stranger's Things</h2>\r\n                <div className='right-body'>\r\n                    <div>\r\n                        <div id='newuser'>\r\n                            <br/>\r\n                            <p>Let's get you started.  You can create a new post so everyone can see what you are willing to sell or give away.</p>\r\n                            <br/>\r\n                            <p>Messaging is simple, just find a post/item you like and click message to bring up the message form.  Once your \r\n                            item is sold or given away you can delete your post or edit if things change.  Use the links at the bottom to navigate \r\n                            the site.</p>\r\n                            <br/>\r\n                            <p> Don't forget to logout as the site will leave you logged in.</p>\r\n                        </div>                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Newuser","import React, { useState} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { postMessage, getUser } from '../api'\r\n\r\nconst Message_form = ({ singlePost, token, setMyPosts, setMyMessages }) => {\r\n\r\n    const [ message , setMessage ] = useState('')\r\n    const [ msg, setMsg ] = useState('')\r\n\r\n    const history = useHistory();\r\n\r\n    const handleMsg = async (event) => {\r\n        event.preventDefault();\r\n        const response = await postMessage( singlePost._id , message , token);\r\n        if (response.success) {\r\n            const response = await getUser(token);\r\n            setMyPosts(response.data.posts);\r\n            setMyMessages(response.data.messages);\r\n            history.push('/home')\r\n        } else {\r\n            setMsg('Message edit did not work, please try again or blame Kyle')\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='right-aside'>\r\n            <div className='right-header'>\r\n                <h2 className='right-title'>Send Message</h2>\r\n            </div>\r\n            <br/>\r\n            <div className='right-body'>\r\n                <form >\r\n                    <div> {singlePost.title}</div>\r\n                    <br/>\r\n                    <label>\r\n                        <div className='info-header'>Message:</div>\r\n                        <textarea rows=\"9\" cols=\"50\" placeholder='What do you want to say?' required={true} maxLength={450} onChange={ (e) => setMessage(e.target.value)} style={{'resize':'none'}}/>\r\n                        <br/>\r\n                        <span className='remainder'>{'('+ (450-message.length) + ') characters remaining' }</span>\r\n                    </label>\r\n                    <br/>\r\n                    <input type='submit' onClick={handleMsg}/>\r\n                    <input type='reset' />\r\n                </form>\r\n                <br />\r\n                <button onClick={()=> history.goBack()}>Cancel</button>\r\n            </div> \r\n            <div className='error-message'>\r\n                {msg}\r\n            </div>  \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Message_form;","import React, { useState } from 'react'\r\nimport { useHistory, Redirect } from 'react-router-dom'\r\n\r\nimport { editPost, getPosts } from '../api'\r\n\r\nconst Post_edit = ({ singlePost, token, setPosts}) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [ title, setTitle ] = useState(singlePost.title)\r\n    const [ description, setDescription ] = useState(singlePost.description)\r\n    const [ price , setPrice ] = useState(singlePost.price)\r\n    const [ postLocation, setLocation ] = useState(singlePost.location)\r\n    const [ willDeliver , setWillDeliver ] = useState(singlePost.willDeliver)\r\n    const [ msg , setMsg ] = useState('')\r\n\r\n    const handleEdit = async (e) => {\r\n        e.preventDefault();\r\n        let authString = 'Bearer ' + token\r\n       \r\n        const postObject = {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': authString\r\n            },\r\n            body: JSON.stringify({\r\n                post: {\r\n                    title: title,\r\n                    description: description,\r\n                    price: price,\r\n                    willDeliver: willDeliver,\r\n                    location : postLocation\r\n                }\r\n            })\r\n        }\r\n\r\n        const res = await editPost(singlePost._id, postObject)\r\n        \r\n        if (res.success) {\r\n             const newPosts = await getPosts({headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': authString\r\n            }}\r\n            );\r\n            setPosts(newPosts);\r\n            history.push('/');\r\n        } else {\r\n            setMsg('Message edit did not work, please try again or blame Kyle.')\r\n        }\r\n\r\n    }\r\n\r\n    if (!singlePost) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    \r\n    return (\r\n        <div className='right-aside'>\r\n            <div className='right-header'>\r\n                <h2 className='right-title'>Edit Your Post</h2>\r\n            </div>\r\n            <div className='right-body'>\r\n            <form id='createForm' onSubmit={handleEdit}>\r\n                        <label>\r\n                            <div className='info-header'>Title:</div>\r\n                            <input type='text' onChange={ (e)=>{\r\n                                setTitle(e.target.value)\r\n                                }} value={title} required={true} maxLength={75} placeholder='required' size={50}/>\r\n                                <br/>\r\n                           <span className='remainder'>{'(' + (75 - title.length) +') characters remaining'}</span>\r\n                        </label>\r\n                        <br/>\r\n                        <label>\r\n                            <div className='info-header'>Description:</div>\r\n                            <textarea rows=\"5\" cols=\"50\" placeholder='required' value={description} required={true} maxLength={425} onChange={ (e) => setDescription(e.target.value)}/>\r\n                            <br/>\r\n                            <span className='remainder'>{'('+ (425-description.length) + ') characters remaining' }</span>\r\n                        </label>\r\n                        <br/>\r\n                        <label>\r\n                            <div className='info-header'>Price:</div>\r\n                            <input type='text' required={true} maxLength={20} value={price} placeholder='required' onChange={ (e)=> setPrice(e.target.value)}/>\r\n                        </label>\r\n                        <br/>\r\n                        <label>\r\n                        <div className='info-header'>Location:</div>\r\n                           <input type='text' placeholder='optional, [On Request] is default' value={postLocation} size={50} onChange={ (e)=> setLocation(e.target.value)}/> \r\n                        </label>\r\n                        <br/>\r\n                        <label>\r\n                            <div className='info-header'>Will Deliver:</div>\r\n                            <select onChange={ (e)=> setWillDeliver(e.target.value) } value={willDeliver} >\r\n                                <option value={false}>False</option>\r\n                                <option value={true}>True</option>\r\n                            </select>\r\n                        </label>\r\n                        <div className='formActions'>\r\n                            <span>\r\n                                <input type='submit' text='Submit Changes'/><button type='button' onClick={()=> history.goBack()}>Cancel</button>\r\n                            </span>\r\n                        </div>\r\n                    </form>\r\n                    <div className='Error-message'>\r\n                        {msg}\r\n                    </div>\r\n            </div>   \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Post_edit","import React from 'react'\r\nimport { useHistory, Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { deletePost, getPosts } from '../api'\r\n\r\nconst Delete_post = ( { singlePost, token, setPosts } ) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const { title, _id, description, price, location, willDeliver, createdAt, updatedAt } = singlePost\r\n\r\n    const handleDelete = async () => {\r\n\r\n        const results = await deletePost( _id , token );\r\n        if (results.success) {\r\n            const newPosts = await getPosts({headers: {\r\n               'Content-Type': 'application/json',\r\n               'Authorization': `BEARER ${token}`\r\n           }}\r\n           );\r\n           setPosts(newPosts);\r\n           history.push('/');\r\n       } else {\r\n           setMsg('Message edit did not work, please try again or blame Kyle.')\r\n       }\r\n    }\r\n\r\n    if (!singlePost) {\r\n        return <Redirect to='/'/>\r\n    }\r\n\r\n    return (\r\n        <div className='right-aside'>\r\n            <div className='right-header'>\r\n                <h2 className='right-title'>Delete Post?</h2>\r\n            </div>\r\n            <div className='right-body'>\r\n                <div post_id={_id} className='mypost'>\r\n                    <div className='post-header'>\r\n                        <h1 className='post-title'>{title}</h1>\r\n                        <div className='author'>{singlePost.author.username}</div>\r\n                    </div>\r\n                    <div className='post-body'>\r\n                        <div className='post-info'>Description: {description}</div>\r\n                        <div className='post-info'>Price: {price}</div>\r\n                        <div className='post-info'>Location: {location}</div>\r\n                        <div className='post-info'>Will Deliver? {willDeliver ? \"Yes\" : \"No\" }</div>\r\n                    </div>\r\n                    <div className='post-actions'>\r\n                        <div className='post-dates'>\r\n                            <p>Created: {moment(createdAt).format('ddd, MMM Do YYYY, h:mm:ss a')}</p>\r\n                            <p>Updated: {moment(updatedAt).format('ddd, MMM Do YYYY, h:mm:ss a')}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='actions'>\r\n                    <button onClick={handleDelete}>Confirm Deletion</button>\r\n                    <button onClick= {()=> history.goBack()}>Cancel</button>\r\n                </div>\r\n            </div>   \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Delete_post","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Redirect,\r\n    Switch,\r\n    Link\r\n  } from 'react-router-dom';\r\n\r\nimport { Greeting, Login, Register, Posts, Loading, Create, Nav, User, Welcome, Mymessages, Myposts, Newuser, Message_form, Post_edit, Delete_post } from './components'\r\nimport { getPosts, getUserName, getUser } from './api'\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [ userName, setUserName ] = useState('Stranger');\r\n    const [ loggedIn , setLoggedIn ] = useState(false);\r\n    const [ token , setToken ] = useState(localStorage.getItem('token'));\r\n    const [ pwd , setPwd] = useState('');\r\n    const [ user, setUser ] = useState('');\r\n    const [ posts , setPosts ] = useState([]);\r\n    const [ myPosts, setMyPosts ] = useState([]);\r\n    const [ myMessages, setMyMessages ] = useState([]);\r\n    const [ message, setMessage ] = useState('');\r\n    const [ singlePost , setSinglePost ] = useState('');\r\n    const [ filterPost, setFilterPost ] = useState([]);\r\n    \r\n  \r\n    useEffect( async ()=>{\r\n      if (token) {\r\n        setLoggedIn(true);\r\n        setUserName(await getUserName(token))\r\n        const res = await getUser(token);\r\n        setMyPosts(res.success ? res.data.posts : []);\r\n        setMyMessages(res.success ? res.data.messages : [])\r\n        const postData = await getPosts(token);\r\n        setPosts(postData);\r\n      } else {\r\n        const postDatum = await getPosts(token);\r\n        setPosts(postDatum);\r\n        setMyPosts([]); setMyMessages([]);\r\n      };            \r\n    },[ token ])\r\n\r\n\r\n    return (\r\n    <Router>\r\n    \r\n    <Greeting userName={userName} loggedIn={loggedIn} posts={posts} setFilterPost={setFilterPost} />\r\n    <section className='app-body'>\r\n    { posts.length ? ( filterPost.length ? <Posts posts={filterPost} userName={userName} setMessage={setMessage} loggedIn={loggedIn} setSinglePost={setSinglePost}/> : <Posts posts={posts} userName={userName} setMessage={setMessage} loggedIn={loggedIn} setSinglePost={setSinglePost}/> ): <Loading option='post-board'/> }\r\n    <Switch>\r\n    \r\n    <Route path='/login'>\r\n      <Login setUserName={setUserName} setToken={setToken} setLoggedIn={setLoggedIn} user={user} setUser={setUser} pwd={pwd} setPwd={setPwd}/>\r\n    </Route>\r\n    <Route path='/register'>\r\n      <Register setUserName={setUserName} user={user} setToken={setToken} setLoggedIn={setLoggedIn} setUser={setUser} pwd={pwd} setPwd={setPwd}/>\r\n    </Route>\r\n    <Route path='/create'>\r\n      <Create setPosts={setPosts} token={token} posts={posts}/>\r\n    </Route>\r\n    <Route path='/mymessages'>\r\n      <Mymessages myMessages={myMessages} userName={userName}/>\r\n    </Route>\r\n    <Route path='/myposts'>\r\n      <Myposts myPosts={myPosts} setSinglePost={setSinglePost}/>\r\n    </Route>\r\n    <Route path='/new_user'>\r\n      <Newuser />\r\n    </Route>\r\n    <Route path='/editpost'>\r\n      <Post_edit singlePost={singlePost} token={token} setPosts={setPosts}/>\r\n    </Route>\r\n    <Route path='/message'>\r\n      <Message_form singlePost={singlePost} token={token} setMyMessages={setMyMessages} setMyPosts={setMyPosts}/>\r\n    </Route>\r\n    <Route path='/deletepost'>\r\n      <Delete_post singlePost={singlePost} token={token} setPosts={setPosts}/>\r\n    </Route>\r\n    <Route exact path='/'>\r\n      { loggedIn ?  <User userName={userName} myMessages={myMessages.length} myPosts={myPosts.length} option={myMessages}/> : <Welcome message={message}/>}\r\n    </Route>\r\n    <Route path='*'>\r\n      <Redirect to='/'/>\r\n    </Route>\r\n    </Switch>    \r\n    </section>\r\n    {/* <Search /> */}\r\n      { loggedIn ? <Nav setLoggedIn={setLoggedIn} setUserName={setUserName} setToken={setToken}/> : (<footer><div className=\"app-title\">\r\n        <h2 >Stranger's Things</h2>\r\n      </div></footer>) }\r\n    </Router>\r\n    \r\n    )\r\n}\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}